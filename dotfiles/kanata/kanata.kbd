(defcfg
  process-unmapped-keys yes
  log-layer-changes yes
)

;; Defines the order of keys that the `deflayer` entries below will operate on
;;
;; Good keyboards should be split, have a max of 6 columns, 4 rows and ~3 thumb 
;; keys per hand, ignore anything extra and try to map keys outside that limit
;; into a layer
;;
;; Chop down a standard UK QWERTY keyboard to fit into that limit, all the
;; layers take this as their template.
(defsrc
  grv  1    2    3    4    5          6    7    8    9    0    -
  tab  q    w    e    r    t          y    u    i    o    p    [
  caps a    s    d    f    g          h    j    k    l    ;    '
  nubs z    x    c    v    b          n    m    ,    .    /    rsft
  lctl lmet lalt                spc                  ralt rmet rctl
)

;; First defined layer is the starting layer
(deflayer starting
  _    _    _    _    _    _          _    _    _    _    _    _
  _    _    _    _    _    _          _    _    _    _    _    _
  @cap @a   @s   @d   @f   _          _    @j   @k   @l   @scn _
  _    _    _    _    _    _          _    _    _    _    _    _
  _    _    @lat                @spc                 @rat _    _
)

(defalias
  cap (tap-hold 200 200 esc  (layer-toggle mouse))
  f   (tap-hold 200 250 f    lsft)
  d   (tap-hold 200 250 d    lctl)
  s   (tap-hold 200 250 s    lalt)
  a   (tap-hold 200 250 a    lmet)
  j   (tap-hold 200 250 j    rsft)
  k   (tap-hold 200 250 k    rctl)
  l   (tap-hold 200 250 l    ralt)
  scn (tap-hold 200 250 scln rmet)
  lat (tap-hold 200 200 lalt (layer-toggle nav))
  spc (tap-hold 200 250 spc  (layer-toggle sym))
  rat (tap-hold 200 200 ralt (layer-toggle fun))
)

(deflayer nav
  _    _    _    _    _    _          _    _    _    _    _    _
  _    _    _    _    _    _          _    _    _    _    _    _
  _    lmet lalt lctl lsft _          left down up   rght _    _    
  _    _    _    _    _    _          home pgdn pgup end  _    _
  _    _    _                   _                    _    _    _
)

(defalias
  ma← (movemouse-accel-left 5 1000 1 5)
  ma↓ (movemouse-accel-down 5 1000 1 5)
  ma↑ (movemouse-accel-up 5 1000 1 5)
  ma→ (movemouse-accel-right 5 1000 1 5)

  mwl (mwheel-left 50 120)
  mwd (mwheel-down 50 120)
  mwu (mwheel-up 50 120)
  mwr (mwheel-right 50 120)
)

(deflayer mouse
  _    _    _    _    _    _          _    _    _    _    _    _
  @cw  _    _    _    _    _          mlft mmid mrgt _    _    _
  _    _    _    _    _    _          @ma← @ma↓ @ma↑ @ma→ _    _
  _    _    _    _    _    _          @mwl @mwd @mwu @mwr _    _
  _    _    _                   _                    _    _    _
)

(defalias
  cw   (caps-word 3000)
)

(defvar
  rps S-0  ;; ) Right parenthesis
  exc S-1  ;; ! Exclamation mark
  dlr S-4  ;; $ Dollar
  per S-5  ;; % Percent
  crt S-6  ;; ^ Caret or circumflex
  amp S-7  ;; & Ampersand
  ask S-8  ;; * Asterisk
  lps S-9  ;; ( Left parenthesis
  pls S-=  ;; + Plus
  lbc S-[  ;; { Left curly bracket
  rbc S-]  ;; } Right curly bracket
  uds S--  ;; _ Underscore
  qtm S-/  ;; ? Question mark
  num bksl ;; # Number sign - on US keyboards it's where backslash is
)

;; Symbols are placed based on their action in Neovim, left/backward 
;; movement/operation symbols are on the left hand, right/forward 
;; movement/operation symbols are on the right
;; Generally home and row above are movement operators and bottom row are non 
;; movement operators
(deflayer sym
  _    _    _    _    _    _          _    _    _    _    _    _
  _    _    _    _    _    $crt       _    $per _    _    _    _
  $qtm $ask [    $lbc $lps $uds       $dlr $rps $rbc ]    $num /
  _    _    _    $exc grv  _          $pls eql  $amp _    _    _
  _    _    _                   _                    _    _    _
)

(deflayer fun
  _    _    _    _    _    _          _    _    _    _    _    _
  _    f12  f7   f8   f9   _          _    _    _    _    _    _
  _    f11  f4   f5   f6   _          _    _    _    _    _    _
  _    f10  f1   f2   f3   _          _    _    _    _    _    _
  _    _    _                   _                    _    _    _
)
